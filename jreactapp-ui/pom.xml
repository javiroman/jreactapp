<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.jreactapp</groupId>
        <artifactId>jreactapp</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>jreactapp-ui</artifactId>
    <packaging>pom</packaging>
    <description>holds common resources used to build installers</description>

    <properties>
        <frontend.maven.version>1.10.3</frontend.maven.version>
        <maven.resources.version>3.0.1</maven.resources.version>
        <node.version>v12.14.0</node.version>
        <yarn.version>v1.22.4</yarn.version>
        <frontend.dependency.configs>src/main/webapp</frontend.dependency.configs>
    </properties>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven.resources.version}</version>
                <executions>
                    <!--
                       Copy of the applicaction directory, coming from GIT, in /target directory
                       executed before the compiling and build of frontend resources
                       That dir will be the working directory of npm, bower, grunt
                       in order to avoid the creation of the direcotries node, node_modules, bower_components, ...
                       (they may be committed in repository)
                    -->
                    <execution>
                        <id>copy-frontendResources-toStagingDir-beforeBuild</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/stagging</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/webapp</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <!--execution>
                        <id>position-react-build</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <phase>prepare-package</phase>
                        <configuration>
                            <outputDirectory>target/ui</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${frontend.dependency.configs}/build</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution-->
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>${frontend.maven.version}</version>

                <configuration>
                    <!-- where npm and yarn are installed -->
                    <installDirectory>target</installDirectory>
                    <!-- where package.json is available -->
                    <workingDirectory>target/stagging</workingDirectory>
                </configuration>

                <executions>
                    <execution>
                        <id>install node and yarn</id>
                        <goals>
                            <goal>install-node-and-yarn</goal>
                        </goals>
                        <configuration>
                            <nodeVersion>${node.version}</nodeVersion>
                            <yarnVersion>${yarn.version}</yarnVersion>
                        </configuration>
                    </execution>
                    <execution>
                        <id>yarn install</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <configuration>
                            <arguments>install</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>build-frontend</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <phase>prepare-package</phase>
                        <configuration>
                            <arguments>build</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>